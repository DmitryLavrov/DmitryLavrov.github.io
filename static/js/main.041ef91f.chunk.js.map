{"version":3,"sources":["components/input.jsx","components/operators.jsx","components/numbers.jsx","components/equal.jsx","components/buttons.jsx","handlers/handleCalculator.js","components/alert.jsx","components/calculator.jsx","app.jsx","index.js"],"names":["Input","inputStr","className","operatorLabels","Operators","onClickButton","map","label","i","onClick","numberLabels","Numbers","row","Equal","Buttons","handleCalculator","includes","handleNumber","handleOperator","handlePoint","handleEqual","handleAC","slice","hasPointInLastDigit","hasError","errorMessage","inputArr","split","lastChar","length","pop","calculate","str","total","arr","match","solveMultiplyAndDivision","parseFloat","shift","toPrecision","toString","a","b","propTypes","PropTypes","string","isRequired","Alert","message","onHideError","Calculator","useState","state","setState","useEffect","addEventListener","onKeyPress","removeEventListener","event","key","prev","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.041ef91f.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Input = ({inputStr}) => {\n  return (\n    <div className=\"input\">{inputStr}</div>\n  )\n}\n\nInput.propTypes = {\n  inputStr: PropTypes.string.isRequired\n}\n\nexport default Input\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst operatorLabels = ['+', '-', '*', '/']\n\nconst Operators = ({onClickButton}) => {\n  return (\n    <div className=\"operators\">\n      {operatorLabels.map((label, i) => (\n        <div key={i} onClick={() => onClickButton(label)}>{label}</div>\n      ))}\n    </div>\n  )\n}\n\nOperators.propTypes = {\n  onClickButton: PropTypes.func.isRequired\n}\n\nexport default Operators\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst numberLabels = [\n  ['7', '8', '9'],\n  ['4', '5', '6'],\n  ['1', '2', '3'],\n  ['0', '.', 'AC']\n]\n\nconst Numbers = ({onClickButton}) => {\n  return (\n    <div className=\"leftPanel\">\n      {numberLabels.map((row, i) => (\n        <div key={i} className=\"numbers\">\n          {row.map((label, i) => (\n            <div key={i} onClick={() => onClickButton(label)}>{label}</div>\n          ))}\n        </div>\n      ))}\n    </div>\n  )\n}\n\nNumbers.propTypes = {\n  onClickButton: PropTypes.func.isRequired\n}\n\nexport default Numbers\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst equalLabel = '='\n\nconst Equal = ({onClickButton}) => {\n  return (\n    <div className=\"equal\" onClick={() => onClickButton(equalLabel)}>{equalLabel}</div>\n  )\n}\n\nEqual.propTypes = {\n  onClickButton: PropTypes.func.isRequired\n}\n\nexport default Equal\n","import React from 'react'\nimport Operators from './operators'\nimport Numbers from './numbers'\nimport Equal from './equal'\nimport PropTypes from 'prop-types'\n\nconst Buttons = ({onClickButton}) => {\n  return (\n    <div className=\"buttons\">\n      <Operators onClickButton={onClickButton}/>\n      <Numbers onClickButton={onClickButton}/>\n      <Equal onClickButton={onClickButton}/>\n    </div>\n  )\n}\n\nButtons.propTypes = {\n  onClickButton: PropTypes.func.isRequired\n}\n\nexport default Buttons\n","import PropTypes from 'prop-types'\n\nconst numberLabels = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9']\nconst operatorLabels = ['-', '+', '*', '/']\n\nconst handleCalculator = (inputStr, label) => {\n  if (numberLabels.includes(label)) return handleNumber(inputStr, label)\n  if (operatorLabels.includes(label)) return handleOperator(inputStr, label)\n  if (['.', ','].includes(label)) return handlePoint(inputStr)\n  if (['=', 'Enter'].includes(label)) return handleEqual(inputStr)\n  if (['AC', 'Escape'].includes(label)) return handleAC()\n}\n\nconst handleNumber = (inputStr, label) => {\n  if (['0', 'Infinity', '-Infinity'].includes(inputStr)) return {inputStr: label}\n  return {inputStr: inputStr + label}\n}\n\nconst handlePoint = (inputStr) => {\n  if (numberLabels.includes(inputStr.slice(-1)) && !hasPointInLastDigit(inputStr)) {\n    return {inputStr: inputStr + '.'}\n  }\n  if (operatorLabels.includes(inputStr.slice(-1))) {\n    return {inputStr: inputStr + '0.'}\n  }\n\n  return {hasError: true, errorMessage: 'Dot is not valid here (click me)'}\n}\n\nconst hasPointInLastDigit = (inputStr) => {\n  const inputArr = inputStr.split('')\n  let lastChar = ''\n  while (inputArr.length > 0) {\n    lastChar = inputArr.pop()\n    if (operatorLabels.includes(lastChar)) return false\n    if (lastChar === '.') return true\n  }\n  return false\n}\n\nconst handleOperator = (inputStr, label) => {\n  if (operatorLabels.includes(inputStr.slice(-1)) || inputStr.slice(-1) === '.') {\n    return {inputStr: inputStr.slice(0, -1) + label}\n  }\n  if (numberLabels.includes(inputStr.slice(-1))) {\n    return {inputStr: inputStr + label}\n  }\n\n  return {hasError: true, errorMessage: 'Operator is not valid here (click me)'}\n}\n\nconst handleEqual = (inputStr) => {\n  if (operatorLabels.includes(inputStr.slice(-1))) {\n    return {inputStr: calculate(inputStr.slice(0, -1))}\n  }\n  return {inputStr: calculate(inputStr)}\n}\n\nconst calculate = (str) => {\n  let total = 0\n  const arr = str.match(/[+\\-*/]*(\\.\\d+|\\d+(\\.\\d+)?)/g) || []\n\n  for (let i = 1; i < arr.length; i++) {\n    [arr[i - 1], arr[i]] = solveMultiplyAndDivision([arr[i - 1], arr[i]])\n  }\n\n  while (arr.length) {\n    total += parseFloat(arr.shift())\n  }\n\n  return parseFloat(total.toPrecision(6)).toString()\n}\n\nconst solveMultiplyAndDivision = ([a, b]) => {\n  if (b.slice(0, 1) === '*') return ['0', (parseFloat(a) * parseFloat(b.slice(1))).toString()]\n  if (b.slice(0, 1) === '/') return ['0', (parseFloat(a) / parseFloat(b.slice(1))).toString()]\n  return [a, b]\n}\n\nconst handleAC = () => {\n  return {inputStr: '0'}\n}\n\nhandleCalculator.propTypes = {\n  inputStr: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired\n}\n\nexport default handleCalculator\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Alert = ({hasError, message, onHideError}) => {\n  return (\n    <p className={'alert' + (hasError ? '' : ' alert-hide')} onClick={onHideError}>\n      {message}\n    </p>\n  )\n}\n\nAlert.propTypes = {\n  hasError: PropTypes.bool.isRequired,\n  message: PropTypes.string.isRequired,\n  onHideError: PropTypes.func.isRequired\n}\n\nexport default Alert\n","import React, {useEffect, useState} from 'react'\n\nimport Input from './input'\nimport Buttons from './buttons'\nimport handleCalculator from '../handlers/handleCalculator'\nimport Alert from './alert'\n\nconst Calculator = () => {\n  const initState = {\n    inputStr: '0',\n    hasError: false,\n    errorMessage: ''\n  }\n\n  const [state, setState] = useState(initState)\n\n  useEffect(() => {\n    addEventListener('keyup', onKeyPress)\n    return () => removeEventListener('keyup', onKeyPress)\n  }, [])\n\n  const onKeyPress = (event) => {\n    onClickButton(event.key)\n  }\n\n  const onClickButton = (label) => {\n    setState(prev => ({\n        ...prev,\n        hasError: false,\n        ...handleCalculator(prev.inputStr, label)\n      })\n    )\n  }\n\n  const onHideError = () => {\n    setState(prev => ({\n      ...prev,\n      hasError: false\n    }))\n  }\n\n  return (\n    <div className=\"calculator\">\n      <Alert hasError={state.hasError} message={state.errorMessage} onHideError={onHideError}/>\n      <Input inputStr={state.inputStr}/>\n      <Buttons onClickButton={onClickButton}/>\n    </div>\n  )\n}\n\nexport default Calculator\n","import React from 'react'\nimport Calculator from './components/calculator'\n\nfunction App() {\n  return (\n    <Calculator/>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './app'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}